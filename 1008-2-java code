MODEL-1
-------
package com.adobe.tourism.core.models;


import javax.annotation.PostConstruct;

import org.apache.commons.lang3.BooleanUtils;
import org.apache.commons.lang3.StringUtils;
import org.apache.sling.api.resource.Resource;
import org.apache.sling.models.annotations.DefaultInjectionStrategy;
import org.apache.sling.models.annotations.Model;
import org.apache.sling.models.annotations.injectorspecific.ValueMapValue;

@Model(adaptables=Resource.class , defaultInjectionStrategy=DefaultInjectionStrategy.OPTIONAL)
public class Multi1 {
	
	@ValueMapValue
	private String label;
	
	@ValueMapValue
	private String linkPath;
	
	@ValueMapValue
	private String target;
	
	@ValueMapValue
	private boolean external;
	
	private String LinkURL;
	
	  @PostConstruct
	  protected void init(){

		  if(StringUtils.isNoneBlank(linkPath)) {

		  LinkURL = BooleanUtils.isTrue(external) ? StringUtils.join("https://",linkPath ) : StringUtils.join(linkPath,".html");

		  }

		  }



public String getLabel() {
		  
		return label;
	}

	public String getLinkPath() {
		return linkPath;
	}

	public String getTarget() {
		return target;
	}

	public boolean isExtrnal() {
		return external;
	}

	public String getLinkURL() {
		return LinkURL;
	}
	
	

}
-------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------
MODEL-2
--------
package com.adobe.tourism.core.models;

import java.util.ArrayList;
import java.util.List;

import org.apache.sling.api.resource.Resource;
import org.apache.sling.models.annotations.DefaultInjectionStrategy;
import org.apache.sling.models.annotations.Model;
import org.apache.sling.models.annotations.injectorspecific.ChildResource;
import org.apache.sling.models.annotations.injectorspecific.ValueMapValue;

@Model(adaptables=Resource.class,defaultInjectionStrategy=DefaultInjectionStrategy.OPTIONAL)
public class Multi2 {
	
	
	@ValueMapValue
	private String multitalented;

	@ChildResource
	private List<Multi1> lingam = new ArrayList<>();

	public String getMultitalented() {
		return multitalented;
	}

	public List<Multi1> getLingam() {
		return lingam;
	}
	
	
}
