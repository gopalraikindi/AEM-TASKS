WeatherServlet:
----------------
package com.geeks.demo.core.servlets;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.geeks.demo.core.Service.WeatherService;
import com.geeks.demo.core.models.WeatherData;
import org.apache.commons.io.IOUtils;
import org.apache.sling.api.SlingHttpServletRequest;
import org.apache.sling.api.SlingHttpServletResponse;
import org.apache.sling.api.servlets.HttpConstants;
import org.apache.sling.api.servlets.ServletResolverConstants;
import org.apache.sling.api.servlets.SlingAllMethodsServlet;
import org.apache.sling.api.servlets.ServletResolverConstants;
import org.apache.sling.api.resource.Resource;
import org.apache.sling.api.resource.ResourceResolver;
import org.apache.sling.api.resource.ResourceResolverFactory;
import org.apache.sling.servlets.annotations.SlingServletPaths;
import org.json.JSONException;
import org.osgi.service.component.annotations.Component;
import org.osgi.framework.Constants;
import org.json.JSONObject;
import org.osgi.service.component.annotations.Reference;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.servlet.Servlet;
import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.nio.charset.StandardCharsets;



import java.io.IOException;

import javax.servlet.Servlet;
import javax.servlet.ServletException;

import org.apache.sling.api.SlingHttpServletRequest;
import org.apache.sling.api.SlingHttpServletResponse;
import org.apache.sling.api.servlets.HttpConstants;
import org.apache.sling.api.servlets.ServletResolverConstants;
import org.apache.sling.api.servlets.SlingAllMethodsServlet;
import org.osgi.service.component.annotations.Component;
import org.osgi.service.component.annotations.Reference;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import com.fasterxml.jackson.databind.ObjectMapper;

@Component(
        service = { Servlet.class },
        property = {
                ServletResolverConstants.SLING_SERVLET_PATHS + "=/bin/submit_city",
                ServletResolverConstants.SLING_SERVLET_METHODS + "=" + HttpConstants.METHOD_POST
        }
)
public class WeatherServlet extends SlingAllMethodsServlet {

    private static final Logger LOGGER = LoggerFactory.getLogger(WeatherServlet.class);

    @Reference
    private WeatherService weatherService;

    @Override
    protected void doPost(SlingHttpServletRequest request, SlingHttpServletResponse response) throws ServletException, IOException {
        LOGGER.info("WeatherServlet: Inside doPost method");

        // Retrieve the city name from the form submission
        String city = request.getParameter("cityName");
        LOGGER.info("City Name Received: {}", city);
        // Get weather data based on the city name
        WeatherData weatherData = weatherService.getWeatherData(city);
        LOGGER.info("Weather Data: {}", weatherData);

        // Set weather data as request attribute
        request.setAttribute("weatherData", weatherData);
        // Set content type to JSON
        response.setContentType("application/json");

        // Convert WeatherData object to JSON and write it to response
        ObjectMapper mapper = new ObjectMapper();
        String jsonWeatherData = mapper.writeValueAsString(weatherData);
        response.getWriter().write(jsonWeatherData);

        // Forward to the JSP file to display weather information
        //request.getRequestDispatcher("/apps/digisite/components/weather/weather.html").forward(request, response);
    }
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
WeatherService:
---------------
package com.geeks.demo.core.Service;

import com.geeks.demo.core.models.WeatherData;
import org.apache.commons.io.IOUtils;
import org.json.JSONException;
import org.json.JSONObject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;

public class WeatherService {
    private static final Logger LOGGER = LoggerFactory.getLogger(WeatherService.class);
    
    private static final String API_KEY = "fa36ec6e22b67bf704cc56c9c13f6b1b"; // Replace with your API key
    private static final String API_URL = "http://api.openweathermap.org/data/2.5/weather?q=%s&appid=%s";

    public WeatherData getWeatherData(String city) throws IOException {
        String description = "Sunny";
        double temperature = 25.0;
        int humidity = 50;
        try {
        	
            URL url = new URL(String.format(API_URL, city, API_KEY));
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("GET");

            InputStream inputStream = connection.getInputStream();
            String response = IOUtils.toString(inputStream, "UTF-8");

            JSONObject jsonObject = new JSONObject(response);

            description = jsonObject.getJSONArray("weather").getJSONObject(0).getString("description");
            temperature = jsonObject.getJSONObject("main").getDouble("temp") - 273.15; // Convert Kelvin to Celsius
            humidity = jsonObject.getJSONObject("main").getInt("humidity");

            LOGGER.info("Weather Data Received: Description={}, Temperature={}, Humidity={}", description, temperature, humidity);
        } catch (IOException | JSONException e) {
            LOGGER.error("Error fetching weather data: {}", e.getMessage());
        }
         return new WeatherData(city, description, temperature, humidity);
    }
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
WeatherData:
-------------
package com.geeks.demo.core.models;

public class WeatherData {
    private String city;
    private String description;
    private double temperature;
    private int humidity;

    // Constructor
    public WeatherData(String city, String description, double temperature, int humidity) {
        this.city = city;
        this.description = description;
        this.temperature = temperature;
        this.humidity = humidity;
    }

    // Getters and setters
    public String getCity() {
        return city;
    }

  

    public String getDescription() {
        return description;
    }

   

    public double getTemperature() {
        return temperature;
    }

    

    public int getHumidity() {
        return humidity;
    }

   
}



       
